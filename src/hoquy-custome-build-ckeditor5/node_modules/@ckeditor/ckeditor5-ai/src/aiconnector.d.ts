/**
 * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license
 */
import { Plugin, type Editor } from 'ckeditor5/src/core';
/**
 * The AI handler plugin that is responsible for the whole communication with AI.
 * It uses the Adapter for OpenAI by default.
 */
export default class AIConnector extends Plugin {
    /**
     * The adapter instance which is used to handle the communication with AI API.
     */
    adapter: Adapter;
    /**
     * @inheritDoc
     */
    static get pluginName(): "AIConnector";
    /**
     * @inheritDoc
     */
    constructor(editor: Editor);
    /**
     * Processes a user prompt and sends it to the AI API.
     *
     * @param prompt The user's prompt to be processed.
     * @param context The context on which the prompt is used.
     * @param onDataCallback The callback that is called after receiving content from AI API.
     * @returns A Promise that resolves with the AI-generated response.
     * @throws If sending the prompt to the AI API fails.
     */
    processPrompt(prompt: string, context: string, onDataCallback: (content: string) => any): Promise<void>;
    /**
     * The method that stops the current request and then recreates the abort controller instance.
     */
    abort(): void;
}
interface Adapter {
    sendPrompt(systemMessage: string, userMessage: string, abortSignal: AbortSignal, onDataCallback: (content: string) => any): Promise<void>;
}
export declare class AIRequestError extends Error {
    constructor(message: string);
}
export {};
